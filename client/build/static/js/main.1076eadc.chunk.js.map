{"version":3,"sources":["utils/auth.js","components/Header/index.js","components/Footer/index.js","components/WorkoutList/index.js","utils/mutations.js","utils/queries.js","components/WorkoutForm/index.js","components/FollowerList/index.js","pages/Home.js","pages/Login.js","pages/NoMatch.js","components/ReactionList/index.js","components/ReactionForm/index.js","pages/SingleWorkout.js","pages/Profile.js","pages/Signup.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","className","to","Auth","loggedIn","href","onClick","event","preventDefault","logout","Footer","getFullYear","WorkoutList","workouts","title","length","map","workout","username","style","fontWeight","createdAt","_id","workoutBody","reactionCount","id","LOGIN_USER","gql","ADD_USER","ADD_WORKOUT","ADD_REACTION","ADD_FOLLOWER","QUERY_WORKOUTS","QUERY_WORKOUT","QUERY_USER","QUERY_ME","QUERY_ME_BASIC","WorkoutForm","useState","setText","characterCount","setCharacterCount","useMutation","update","cache","addWorkout","data","me","readQuery","query","writeQuery","e","console","warn","error","handleFormSubmit","onSubmit","placeholder","value","rows","onChange","target","type","FollowerList","followerCount","followers","follower","role","Home","useQuery","loading","userData","Login","props","email","password","formState","setFormState","login","handleChange","name","variables","NoMatch","ReactionList","reactions","reaction","reactionBody","ReactionForm","workoutId","setBody","addReaction","SingleWorkout","useParams","Profile","userParam","addFollower","user","getProfile","handleClick","Signup","addUser","class","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1076eadc.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\nimport '../../index.css'\n\nconst Header = () => {\n    const logout = event => {\n      event.preventDefault();\n      Auth.logout();\n    };\n  \n    return (\n      <header className=\"navbar navbar-expand-lg bg-light fixed-top\">\n        <div className=\"container-fluid \">\n          <Link className='nav-link' to=\"/\">\n            <h1 >WALK THIS WEIGH</h1>\n          </Link>\n  \n          <nav className=\"text-center nav-item\">\n          <ul className=\"nav justify-content-end\">  \n              {Auth.loggedIn() ? (\n              <>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/profile\">Me</Link>\n                <a className=\"nav-link\"  href=\"/\" onClick={logout}>\n                  Logout\n                </a>\n              </li>\n              </>\n              ) : (\n                <>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/login\">Login</Link>\n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/signup\">Signup</Link>\n                </li>\n                </>\n                 )}\n               </ul> \n          </nav>\n        </div>\n      </header>\n    );\n  };\n  \n  export default Header;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className=\"navbar navbar-expand-lg bg-light fixed-bottom\">\n      <div className=\"container\">\n        &copy;{new Date().getFullYear()} by Ellie Sargent, Patrick Kinsley, Jerilyn Wise \n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"../../index.css\"\n\nconst WorkoutList = ({ workouts, title }) => {\n  if (!workouts.length) {\n    return <h3 id= '#form_box'>No Workouts Yet</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {workouts &&\n       workouts.map(workout => (\n          <div key={workout._id} className=\"card mb-3\">\n            <p className=\"card-header\">\n              <Link\n                to={`/profile/${workout.username}`}\n                style={{ fontWeight: 700 }}\n                className=\"text-light\"\n              >\n                {workout.username}\n              </Link>{' '}\n              Workout on {workout.createdAt}\n            </p>\n            <div className=\"card-body\">\n              <Link to={`/workout/${workout._id}`}>\n                <p>{workout.workoutBody}</p>\n                <p className=\"mb-0\">\n                  Reactions: {workout.reactionCount} || Click to{' '}\n                  {workout.reactionCount ? 'see' : 'start'} the discussion!\n                </p>\n              </Link>\n            </div>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default WorkoutList;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_WORKOUT = gql`\n  mutation addWorkout($workoutBody: String!) {\n    addWorkout(workoutBody: $workoutBody) {\n      _id\n      workoutBody\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_REACTION = gql`\n  mutation addReaction($workoutId: ID!, $reactionBody: String!) {\n    addReaction(workoutId: $workoutId, reactionBody: $reactionBody) {\n      _id\n      reactionCount\n      reactions {\n        _id\n        reactionBody\n        createdAt\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_FOLLOWER = gql`\n  mutation addFollower($id: ID!) {\n    addFollower(followerId: $id) {\n      _id\n      username\n      followerCount\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const REMOVE_FOLLOWER = gql`\n  mutation removeFollower($id: ID!) {\n    removeFollower(id: $id) {\n      _id\n      username\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\n// all workouts\nexport const QUERY_WORKOUTS = gql`\n  query workout($username: String) {\n    workouts(username: $username) {\n      _id\n      workoutBody\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\n\n// one workout\nexport const QUERY_WORKOUT = gql`\n  query workout($id: ID!) {\n    workout(_id: $id) {\n      _id\n      workoutBody\n      createdAt\n      username\n      reactionCount\n      reactions {\n        _id\n        createdAt\n        username\n        reactionBody\n      }\n    }\n  }\n`;\nexport const QUERY_USER = gql`\n  query user($username: String!) {\n    user(username: $username) {\n      _id\n      username\n      email\n      followerCount\n      followers {\n        _id\n        username\n      }\n      workouts {\n        _id\n        workoutBody\n        createdAt\n        reactionCount\n      }\n    }\n  }\n`;\nexport const QUERY_ME = gql`\n  {\n    me {\n      _id\n      username\n      email\n      followerCount\n      workouts {\n        _id\n        workoutBody\n        createdAt\n        reactionCount\n        reactions {\n          _id\n          createdAt\n          reactionBody\n          username\n        }\n      }\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\nexport const QUERY_ME_BASIC = gql`\n  {\n    me {\n      _id\n      username\n      email\n      followerCount\n      followers {\n        _id\n        username\n      }\n    }\n  }\n`;\n\n\n\n\n\n\n\n\n\n\n\n\n","import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_WORKOUT } from '../../utils/mutations';\nimport { QUERY_WORKOUTS, QUERY_ME } from '../../utils/queries';\n\nconst WorkoutForm = () => {\n  const [workoutBody, setText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addWorkout, { error }] = useMutation(ADD_WORKOUT, {\n    update(cache, { data: { addWorkout } }) {\n      \n        // could potentially not exist yet, so wrap in a try/catch\n      try {\n        // update me array's cache\n        const { me } = cache.readQuery({ query: QUERY_ME });\n        cache.writeQuery({\n          query: QUERY_ME,\n          data: { me: { ...me, workouts: [...me.workouts, addWorkout] } },\n        });\n      } catch (e) {\n        console.warn(\"First workout insertion by user!\")\n      }\n\n      // update workout array's cache\n      const { workouts } = cache.readQuery({ query: QUERY_WORKOUTS });\n      cache.writeQuery({\n        query: QUERY_WORKOUTS,\n        data: { workout: [addWorkout, ...workouts] },\n      });\n    }\n  });\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addWorkout({\n         workoutBody\n      });\n\n      // clear form value\n      setText('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n      </p>\n      <form  className=\"border border-light p-5\"\n        onSubmit={handleFormSubmit}\n      >\n        <p className=\"h4 mb-4 text-center\">My Workout</p>\n        <textarea\n          placeholder=\"Add workout here.....\"\n          value={workoutBody}\n          className=\"form-control rounded-0\"\n          rows=\"3\"\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"btn btn-info btn-block\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default WorkoutForm;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../index.css'\n\nconst FollowerList = ({ followerCount, username, followers }) => {\n  if (!followers || !followers.length) {\n    return <p id='follower' className=\"alert alert-secondary text-center mb-4\" role=\"alert\">{username}, follow some new users!</p>;\n  }\n\n  return (\n    <div>\n      <h5>\n        {username}'s {followerCount} {followerCount === 1 ? 'follower' : 'followers'}\n      </h5>\n      {followers.map(follower => (\n        <button className=\"btn btn-info btn-block my-4\" key={follower._id}>\n          <Link to={`/profile/${follower.username}`}>{follower.username}</Link>\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default FollowerList;\n","import React from 'react';\nimport WorkoutList from '../components/WorkoutList';\nimport WorkoutForm from '../components/WorkoutForm';\nimport FollowerList from '../components/FollowerList';\n\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_WORKOUTS, QUERY_ME_BASIC } from '../utils/queries';\nimport '../index.css'\n\n\nconst Home = () => {\n  const { loading, data } = useQuery(QUERY_WORKOUTS);\n  const { data: userData } = useQuery(QUERY_ME_BASIC);\n  const workouts = data?.workouts || [];\n\n  const loggedIn = Auth.loggedIn();\n\n  return (\n    <main>\n      <div className=\"flex-row justify-space-between\">\n        {loggedIn && (\n          <div id='single_workout' className=\"col-12 mb-3\">\n            <WorkoutForm />\n          </div>\n        )}\n        <div className={`col-12 mb-3 ${loggedIn && 'col-lg-8'}`}>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <WorkoutList\n              workouts={workouts}\n              title=\"Some Feed for Workout(s)...\"\n            />\n          )}\n        </div>\n        {loggedIn && userData ? (\n          <div className=\"col-12 col-lg-3 mb-3\">\n            <FollowerList\n              username={userData.me.username}\n              followerCount={userData.me.followerCount}\n              followers={userData.me.followers}\n            />\n          </div>\n        ) : null}\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <main>\n      <form id='form_box' className='border border-light p-5' onSubmit={handleFormSubmit}>\n        <p className=\"h4 mb-4 text-center\">Sign in</p>\n        <input type=\"email\" \n        id=\"email\" \n        name=\"email\"\n        className=\"form-control mb-4\" \n        placeholder=\"E-mail\" \n        value={formState.email} \n        onChange={handleChange}></input>\n        <input type=\"password\" \n        id=\"password\" \n        className=\"form-control mb-4\" \n        name=\"password\"\n        placeholder=\"Password\" \n        value={formState.password}\n        onChange={handleChange}></input>\n        <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\n      </form>\n      {error && <div>Login failed</div>}\n    </main>\n  );\n};\n\nexport default Login;\n","import React from 'react';\n\nconst NoMatch = () => {\n  return (\n    <div>\n      Oops, we couldn't find that page.\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ReactionList = ({ reactions }) => {\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">\n        <span className=\"text-light\">Reactions</span>\n      </div>\n      <div className=\"card-body\">\n        {reactions &&\n          reactions.map(reaction => (\n            <p className=\"pill mb-3\" key={reaction._id}>\n              {reaction.reactionBody} || {' '}\n              <Link to={`/profile/${reaction.username}`} style={{ fontWeight: 700 }}>\n                {reaction.username} on {reaction.createdAt}\n              </Link>\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReactionList;\n","import React, { useState } from 'react';\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_REACTION } from '../../utils/mutations';\n\nconst ReactionForm = ({ workoutId }) => {\n  const [reactionBody, setBody] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n  const [addReaction, { error }] = useMutation(ADD_REACTION);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setBody(event.target.value);\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await addReaction({\n        variables: { reactionBody, workoutId },\n      });\n\n      // clear form value\n      setBody('');\n      setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <p\n        className={`m-0 ${characterCount === 280 || error ? 'text-error' : ''}`}\n      >\n        Character Count: {characterCount}/280\n        {error && <span className=\"ml-2\">Something went wrong...</span>}\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <textarea\n          placeholder=\"Leave a reaction to this workout...\"\n          value={reactionBody}\n          className=\"form-input col-12 col-md-9\"\n          onChange={handleChange}\n        ></textarea>\n\n        <button className=\"btn col-12 col-md-3\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default ReactionForm;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport ReactionList from '../components/ReactionList';\nimport ReactionForm from '../components/ReactionForm';\n\nimport Auth from '../utils/auth';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_WORKOUT } from '../utils/queries';\n\nconst SingleWorkout = (props) => {\n  const { id: workoutId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_WORKOUT, {\n    variables: { id: workoutId },\n  });\n\n  const workout = data?.workout || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div id='single_workout'>\n      <div  className=\"card mb-4\">\n        <p className=\"card-header\">\n          <span style={{ fontWeight: 700 }} className=\"text-light\">\n            {workout.username}\n          </span>{' '}\n          Workout on {workout.createdAt}\n        </p>\n        <div className=\"card-body\">\n          <p>{workout.workoutBody}</p>\n        </div>\n      </div>\n\n      {workout.reactionCount > 0 && (\n        <ReactionList reactions={workout.reactions} />\n      )}\n\n      {Auth.loggedIn() && <ReactionForm workoutId={workout._id} />}\n    </div>\n  );\n};\n\nexport default SingleWorkout;\n","import React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\n\n\nimport WorkoutList from '../components/WorkoutList';\nimport FollowerList from '../components/FollowerList';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\nimport { ADD_FOLLOWER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst Profile = (props) => {\n  const { username: userParam } = useParams();\n\n  const [addFollower] = useMutation(ADD_FOLLOWER);\n  const { loading, data } = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam },\n  });\n\n  const user = data?.me || data?.user || {};\n\n  // navigate to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile:username\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n  const handleClick = async () => {\n    try {\n      await addFollower({\n        variables: { id: user._id },\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"flex-row mb-3\">\n        <h2 className=\"alert alert-secondary text-center mb-4\" role=\"alert\" id='form_box'>\n          Viewing {userParam ? `${user.username}'s` : 'your'} profile.\n        </h2>\n\n        {userParam && (\n          <button className=\"btn ml-auto\" onClick={handleClick}>\n            FOLLOW\n          </button>\n        )}\n      </div>\n\n      <div className=\"flex-row justify-space-between mb-3\">\n        <div className=\"col-12 mb-3 col-lg-8\">\n          <WorkoutList\n            workouts={user.workouts}\n            title={`${user.username}'s workouts...`}\n          />\n        </div>\n\n        <div className=\"col-12 col-lg-3 mb-3\">\n          <FollowerList\n            username={user.username}\n            followerCount={user.followerCount}\n            followers={user.followers}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <main>\n      <form id='form_box' class=\"border border-light p-5\" onSubmit={handleFormSubmit}>\n        <p className=\"h4 mb-4 text-center\">Sign up</p>\n        <input className=\"form-control\"\n                placeholder=\"Your Username\"\n                name=\"username\"\n                type=\"username\"\n                id=\"username\"\n                value={formState.username}\n                onChange={handleChange}/>\n\n        <input className=\"form-control mb-4\"\n                placeholder=\"E-mail\" \n                name=\"email\"\n                type=\"email\"\n                id=\"email\"                        \n                value={formState.email}\n                onChange={handleChange}/>\n\n        <input  className=\"form-control mb-4\" \n                placeholder=\"Password\" \n                name=\"password\"\n                type=\"password\"\n                id=\"password\"\n                value={formState.password}\n                onChange={handleChange}/>\n        <small id=\"defaultRegisterFormPhoneHelpBlock\" className=\"form-text text-muted mb-4\">Minimal 8 characters length</small>\n        <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign up</button>\n        {error && <div>Signup failed</div>}\n      </form>\n      \n    </main>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport NoMatch from './pages/NoMatch';\nimport SingleWorkout from './pages/SingleWorkout';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/profile\" \n                element={<Profile />} \n              />\n              <Route \n                path=\"/workout/:id\" \n                element={<SingleWorkout/>} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}